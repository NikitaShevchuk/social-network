{"version":3,"file":"static/js/721.f044c1da.chunk.js","mappings":"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","sources":["common/assets/img/send.svg","components/MainContent/Messages/NewMessage.tsx","components/MainContent/Messages/ConversationHead.tsx","components/MainContent/Messages/utils.ts","components/MainContent/Messages/Messages.tsx","components/MainContent/Messages/Dialogs/SidebarHeader.tsx","components/MainContent/Messages/Dialogs/DialogsSearchForm.tsx","components/MainContent/Messages/Dialogs/Dialogs.tsx","components/MainContent/Messages/MessagesContainer.tsx","../node_modules/lodash.debounce/index.js"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSend(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 180,\n    height: 190,\n    viewBox: \"0 0 18 19\",\n    fill: \"white\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.7537 18.0376C11.4324 18.0376 11.8933 17.5097 12.2117 16.6969L17.7671 2.16736C17.9095 1.79868 17.985 1.47189 17.985 1.19537C17.985 0.558552 17.5828 0.15635 16.9459 0.15635C16.6694 0.15635 16.3426 0.231763 15.9739 0.374209L1.38574 5.95477C0.648368 6.23966 0.10372 6.70889 0.10372 7.38761C0.10372 8.20877 0.707023 8.53556 1.54494 8.78694L5.75969 10.0773C6.37975 10.2701 6.74844 10.2617 7.19253 9.85948L16.6191 1.17023C16.7448 1.0613 16.8873 1.06968 16.9795 1.16186C17.0716 1.24565 17.08 1.40485 16.9711 1.52216L8.30697 10.9572C7.9299 11.3677 7.88801 11.7867 8.07235 12.3984L9.33761 16.5377C9.59737 17.4008 9.92416 18.0376 10.7537 18.0376Z\",\n    fill: \"white\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSend);\nexport default __webpack_public_path__ + \"static/media/send.2ec83b7d2370fbd448eddc161ecfe473.svg\";\nexport { ForwardRef as ReactComponent };","import React, {FC} from \"react\";\r\nimport {FormApi} from \"final-form\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport send from \"../../../common/assets/img/send.svg\";\r\n\r\nexport interface NewMessageForm {\r\n    body: string\r\n}\r\n\r\nconst NewMessage: FC<{sendMessage: (formData: any) => void}> = ({sendMessage}) => {\r\n    const sendMessageOnEnter = (e: React.KeyboardEvent, form: FormApi<NewMessageForm>) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault()\r\n            form.submit()\r\n            form.reset()\r\n        }\r\n    }\r\n    const handleClick = (form: FormApi<NewMessageForm>) => {\r\n        form.submit()\r\n        form.reset()\r\n    }\r\n    return (\r\n        <div className=\"message-text-container\">\r\n            <Form\r\n                onSubmit={sendMessage}\r\n                render={\r\n                    ({handleSubmit, submitting, pristine, form}) => (\r\n                        <form className='add-message-form' onSubmit={handleSubmit}>\r\n                            <Field\r\n                                onKeyDown={\r\n                                    (e: React.KeyboardEvent) => sendMessageOnEnter(e, form)\r\n                                }\r\n                                name='body'\r\n                                component='textarea'\r\n                                placeholder='Text a message'\r\n                            />\r\n                            <button\r\n                                disabled={submitting || pristine}\r\n                                onClick={() => handleClick(form)}\r\n                            >\r\n                                <img src={send} alt=\"\"/>\r\n                            </button>\r\n                        </form>\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default NewMessage;","import React, {FC} from 'react';\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {RootState} from \"../../../redux/redux-store\";\r\nimport userImg from \"../../../common/assets/img/userIcon.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst ConversationHead: FC<ConversationHeadProps> = ({conversationHead}) => {\r\n    const headerImage = conversationHead.photo ? conversationHead.photo : userImg\r\n    return (\r\n        <NavLink\r\n            replace\r\n            to={`/profile/${conversationHead.id}`}\r\n            className=\"conversation-head\"\r\n        >\r\n            <figure>\r\n                <img src={headerImage} alt=\"\"/>\r\n            </figure>\r\n            <span>{conversationHead.userName}</span>\r\n        </NavLink>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n    conversationHead: state.messagesPage.conversationHead\r\n})\r\n\r\nconst connector = connect(mapStateToProps, {})\r\n\r\nexport default connector(ConversationHead)\r\nexport type ConversationHeadProps = ConnectedProps<typeof connector>","import {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport debounce from 'lodash.debounce'\r\n\r\nconst isElementScrolledUp = (chatRef: HTMLUListElement | null): boolean => {\r\n    if (!chatRef) return false\r\n    const availableScrollHeight = chatRef.scrollHeight - chatRef.offsetHeight - 32\r\n    return (chatRef.scrollTop + 70) < availableScrollHeight\r\n}\r\nconst scrollChatToBottom = (chatRef: HTMLUListElement | null) => {\r\n    if (!chatRef) return\r\n    const scrolledUp = isElementScrolledUp(chatRef)\r\n    if (!scrolledUp) chatRef.scrollTop = chatRef.scrollHeight\r\n}\r\n\r\n\r\nexport const useScrollChatToBottom = (\r\n    messages: JSX.Element[],\r\n    isMessagesLoading: boolean,\r\n    loadMoreMessages: () => void,\r\n    isMessagesFetching: boolean\r\n) => {\r\n\r\n    const chatRef = useRef<HTMLUListElement | null>(null)\r\n    useEffect(() => {\r\n        scrollChatToBottom(chatRef.current)\r\n    }, [messages])\r\n\r\n    // Scroll chat on first load\r\n    const scrolledOnChatLoad = useRef<boolean>(false)\r\n    useEffect(() => {\r\n        if (!isMessagesLoading && !scrolledOnChatLoad.current) {\r\n            if (chatRef.current) chatRef.current.scrollTop = chatRef.current.scrollHeight\r\n            scrolledOnChatLoad.current = true\r\n        }\r\n    }, [isMessagesLoading])\r\n\r\n    // Scroll handlers\r\n    const [showScrollButton, setShowScrollButton] = useState<boolean>(false)\r\n    const messagesLoadWithDebounce = useCallback(debounce(loadMoreMessages, 500), [])\r\n    const handleScroll = () => {\r\n        isElementScrolledUp(chatRef.current)\r\n            ? !showScrollButton && setShowScrollButton(true)\r\n            : showScrollButton && setShowScrollButton(false)\r\n\r\n        if (!chatRef.current) return\r\n        const scrolledToTop = chatRef.current.scrollTop < 30\r\n        if (scrolledToTop && scrolledOnChatLoad) messagesLoadWithDebounce()\r\n    }\r\n    useEffect(\r\n        () => {\r\n            if (chatRef.current && !isMessagesFetching) chatRef.current.scrollTop = 1100\r\n        }, [isMessagesFetching]\r\n    )\r\n    const handleScrollClick = () => {\r\n        if (chatRef.current) chatRef.current.scroll({\r\n            top: chatRef.current?.scrollHeight,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n    return {chatRef, handleScrollClick, handleScroll, showScrollButton}\r\n}","import React, {FC} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Preloader from \"../../../preloaders/Preloader\";\r\nimport {MessagesPropsType} from \"./MessagesContainer\";\r\nimport NewMessage from \"./NewMessage\";\r\nimport ConversationHead from \"./ConversationHead\";\r\nimport {useScrollChatToBottom} from \"./utils\";\r\nimport {NewMessageFormData} from \"../../../types/MessagesTypes\";\r\nimport arrow from '../../../common/assets/img/icons/down-arrow.png'\r\n\r\n\r\nconst Messages: FC<MessagesPropsType> = ({\r\n    messages, sendNewMessage, isMessagesLoading, loadMoreMessages, isMessagesFetching\r\n}) => {\r\n    const userId = Number(useParams().userId);\r\n    const sendMessage = (formData: NewMessageFormData) => sendNewMessage(formData)\r\n    const {\r\n        chatRef, handleScrollClick, handleScroll, showScrollButton\r\n    } = useScrollChatToBottom(messages, isMessagesLoading, loadMoreMessages, isMessagesFetching)\r\n    return (\r\n        <div className=\"peoples-mesg-box\">\r\n            {userId &&\r\n                <div className='chatArea opacity-animation'>\r\n                    <ConversationHead/>\r\n                    <ul\r\n                        className=\"chatting-area\"\r\n                        ref={chatRef}\r\n                        onScroll={handleScroll}\r\n                    >\r\n                        <Preloader\r\n                            isFetching={isMessagesFetching}\r\n                            size='small'\r\n                        />\r\n                        {isMessagesLoading && <Preloader />}\r\n                        {messages[0]\r\n                            ? !isMessagesLoading && messages\r\n                            : !isMessagesLoading && <div className='preloader'>You've got no messages yet.</div>\r\n                        }\r\n                    </ul>\r\n                    {showScrollButton &&\r\n                        <img\r\n                            src={arrow} alt=\"\"\r\n                            className=\"scroll-bottom opacity-animation\"\r\n                            onClick={handleScrollClick}\r\n                        />\r\n                    }\r\n                    <NewMessage sendMessage={sendMessage}/>\r\n                </div>\r\n            }\r\n            {!userId &&\r\n                <div className='fetch-error'>Choose friend to start chat</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages","import React, {FC} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSquarePlus, faXmark} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface Props {\r\n    searchMode: boolean\r\n    setSearchMode: (isSearchMode: boolean) => void\r\n}\r\n\r\nconst SidebarHeader: FC<Props> = ({searchMode, setSearchMode}) => {\r\n    const closeSearch = () => setSearchMode(false)\r\n    const openSearch = () => setSearchMode(true)\r\n    return (\r\n        <div className=\"sidebarHeader\">\r\n            {searchMode && <>\r\n                <span className=\"text opacity-animation\">Find people</span>\r\n                <FontAwesomeIcon\r\n                    className='opacity-animation'\r\n                    onClick={closeSearch}\r\n                    icon={faXmark}\r\n                />\r\n            </>}\r\n            {!searchMode && <>\r\n                <span className=\"text opacity-animation\">Messages</span>\r\n                <FontAwesomeIcon\r\n                    className='opacity-animation'\r\n                    onClick={openSearch}\r\n                    icon={faSquarePlus}\r\n                />\r\n            </>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SidebarHeader;","import React, {FC} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faSearch} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {required} from \"../../../../common/helpers/validators\";\r\nimport {isSearchFieldEmpty} from \"../../../../common/FormControl/formHelpers\";\r\nimport {FormApi} from \"final-form\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\ninterface Props {\r\n    setDialogs: (id: number) => void\r\n    filterDialogs: (userName: string) => void\r\n}\r\n\r\nexport interface SearchDialogsFormValues {\r\n    searchBody: string\r\n}\r\n\r\nconst DialogsSearchForm: FC<Props> = ({filterDialogs, setDialogs}) => {\r\n    const userId = Number(useParams().userId);\r\n    const dialogsSearch = (formData: any) => {\r\n        filterDialogs(formData.searchBody)\r\n    }\r\n    const handleKeyUp = (e: KeyboardEvent, form: FormApi<SearchDialogsFormValues>) => {\r\n        isSearchFieldEmpty(e, form, setDialogs, userId)\r\n        form.submit()\r\n    }\r\n    return (\r\n        <div className=\"search-users pointer\">\r\n            <FontAwesomeIcon icon={faSearch} />\r\n            <Form\r\n                onSubmit={dialogsSearch}\r\n                render={\r\n                    ({handleSubmit, form}) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <Field\r\n                                name='searchBody'\r\n                                autoFocus validate={required}\r\n                                onKeyUp={(e: KeyboardEvent) => handleKeyUp(e, form)}\r\n                                component='input'\r\n                                placeholder='Find dialog by name'\r\n                                className=\"search-users__input\"\r\n                            />\r\n                        </form>\r\n                    )}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogsSearchForm;","import React, {FC, useState} from \"react\";\r\nimport UsersContainer from \"../../../../features/Users/UsersContainer\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {RootState} from \"../../../../redux/redux-store\";\r\nimport {filterDialogs, getDialog, setDialogs} from \"../../../../redux/reducers/messages-reducer/middleware\";\r\nimport SidebarHeader from \"./SidebarHeader\";\r\nimport DialogsSearchForm from \"./DialogsSearchForm\";\r\nimport DialogsList from \"../../../../features/DialogsList\";\r\n\r\nconst Dialogs: FC<DialogsConnectedProps> = ({\r\n    filterDialogs, getDialog\r\n}) => {\r\n    const [searchMode, setSearchMode] = useState(false);\r\n    return (\r\n        <ul className=\"peoples\">\r\n            <SidebarHeader\r\n                searchMode={searchMode}\r\n                setSearchMode={setSearchMode}\r\n            />\r\n            <div className={searchMode ? 'shown' : 'hidden'}>\r\n                <UsersContainer\r\n                    setSearchMode={setSearchMode}\r\n                    getDialog={getDialog}\r\n                />\r\n            </div>\r\n            <div className={!searchMode ? 'shown' : 'hidden'}>\r\n                <DialogsSearchForm\r\n                    setDialogs={setDialogs}\r\n                    filterDialogs={filterDialogs}\r\n                />\r\n                <div className=\"dialogs-list\">\r\n                    <DialogsList />\r\n                </div>\r\n            </div>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n\r\n})\r\n\r\nconst connector = connect(\r\n    mapStateToProps,\r\n    {getDialog, filterDialogs}\r\n)\r\n\r\nexport default connector(Dialogs)\r\nexport type DialogsConnectedProps = ConnectedProps<typeof connector>","import React, {FC, useEffect} from \"react\";\r\nimport {\r\n    fetchMessages,\r\n    loadMessages,\r\n    loadMoreMessages,\r\n    sendNewMessage\r\n} from \"../../../redux/reducers/messages-reducer/middleware\";\r\nimport Messages from \"./Messages\";\r\nimport {connect, ConnectedProps} from \"react-redux\";\r\nimport {\r\n    getIsMessagesLoading, getMessagesIsFetching,\r\n    getMessagesPageNumber,\r\n    getTotalMessagesCount,\r\n    messagesReselect\r\n} from \"../../../redux/selectors/messagesSelector\";\r\nimport {RootState} from \"../../../redux/redux-store\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport Dialogs from \"./Dialogs/Dialogs\";\r\nimport {\r\n    setDialogUserId, setPageNumber\r\n} from \"../../../redux/reducers/messages-reducer/actions\";\r\n\r\nconst MessagesContainer: FC<MessagesPropsType> = (props) => {\r\n    const userId = Number(useParams().userId);\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            props.setDialogUserId(userId)\r\n            props.loadMessages()\r\n        }\r\n        const setFetchInterval = (): NodeJS.Timer | false => {\r\n            if (userId) return setInterval(() => props.fetchMessages(), 1000)\r\n            else return false\r\n        }\r\n        const fetchInterval = setFetchInterval()\r\n        return () => {if (fetchInterval) clearInterval(fetchInterval)}\r\n    }, [userId])\r\n\r\n    return (\r\n        <div className=\"central-meta messages\">\r\n            <div className=\"messages\">\r\n                <div className=\"message-box\">\r\n                    <Dialogs />\r\n                    <Messages {...props}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n    return {\r\n        messages: messagesReselect(state),\r\n        totalMessagesCount: getTotalMessagesCount(state),\r\n        isMessagesLoading: getIsMessagesLoading(state),\r\n        pageNumber: getMessagesPageNumber(state),\r\n        isMessagesFetching: getMessagesIsFetching(state)\r\n    }\r\n}\r\n\r\nconst connector = connect(\r\n    mapStateToProps,\r\n    {\r\n        sendNewMessage, loadMessages, fetchMessages,\r\n        setPageNumber, loadMoreMessages, setDialogUserId\r\n    }\r\n)\r\n\r\nexport default connector(MessagesContainer);\r\n\r\nexport type MessagesPropsType = ConnectedProps<typeof connector>","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n"],"names":["sendMessage","className","onSubmit","render","handleSubmit","submitting","pristine","form","onKeyDown","e","key","preventDefault","submit","reset","sendMessageOnEnter","name","component","placeholder","disabled","onClick","handleClick","src","send","alt","connect","state","conversationHead","messagesPage","headerImage","photo","userImg","replace","to","id","userName","isElementScrolledUp","chatRef","availableScrollHeight","scrollHeight","offsetHeight","scrollTop","useScrollChatToBottom","messages","isMessagesLoading","loadMoreMessages","isMessagesFetching","useRef","useEffect","scrollChatToBottom","current","scrolledOnChatLoad","useState","showScrollButton","setShowScrollButton","messagesLoadWithDebounce","useCallback","debounce","handleScrollClick","scroll","top","behavior","handleScroll","sendNewMessage","userId","Number","useParams","ref","onScroll","Preloader","isFetching","size","formData","searchMode","setSearchMode","icon","faXmark","faSquarePlus","filterDialogs","setDialogs","faSearch","searchBody","autoFocus","validate","required","onKeyUp","isSearchFieldEmpty","handleKeyUp","getDialog","UsersContainer","DialogsList","messagesReselect","totalMessagesCount","getTotalMessagesCount","getIsMessagesLoading","pageNumber","getMessagesPageNumber","getMessagesIsFetching","loadMessages","fetchMessages","setPageNumber","setDialogUserId","props","fetchInterval","setInterval","clearInterval","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","freeGlobal","global","Object","freeSelf","self","root","Function","objectToString","prototype","toString","nativeMax","Math","max","nativeMin","min","now","Date","isObject","value","type","toNumber","isObjectLike","call","isSymbol","other","valueOf","isBinary","test","slice","module","exports","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","remainingWait","debounced","isInvoking","arguments","this","cancel","clearTimeout","flush"],"sourceRoot":""}